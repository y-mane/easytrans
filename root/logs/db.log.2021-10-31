[ DEBUG ][ 2021-10-31 08:12:31,114 ][ utils ] ==> (0.021) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:31,143 ][ utils ] ==> (0.008) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,164 ][ utils ] ==> (0.004) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,166 ][ utils ] ==> (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,169 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,169 ][ utils ] ==> (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,183 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,186 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,190 ][ utils ] ==> (0.004) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('oauth', '0007_auto_20211031_0812', '2021-10-31T08:12:32.186403+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('oauth', '0007_auto_20211031_0812', datetime.datetime(2021, 10, 31, 8, 12, 32, 186403, tzinfo=<UTC>))
[ DEBUG ][ 2021-10-31 08:12:32,201 ][ schema ] ==> ALTER TABLE "request_request" ALTER COLUMN "ip" DROP NOT NULL; (params [])
[ DEBUG ][ 2021-10-31 08:12:32,207 ][ utils ] ==> (0.006) ALTER TABLE "request_request" ALTER COLUMN "ip" DROP NOT NULL; args=[]
[ DEBUG ][ 2021-10-31 08:12:32,228 ][ utils ] ==> (0.002) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,229 ][ utils ] ==> (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('request', '0002_auto_20211031_0812', '2021-10-31T08:12:32.229105+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('request', '0002_auto_20211031_0812', datetime.datetime(2021, 10, 31, 8, 12, 32, 229105, tzinfo=<UTC>))
[ DEBUG ][ 2021-10-31 08:12:32,249 ][ schema ] ==> CREATE TABLE "sentry_action" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(100) NOT NULL, "reference" uuid NOT NULL, "status" boolean NOT NULL, "action_type" varchar(100) NOT NULL, "target" varchar(20) NOT NULL, "current_value" text NULL, "new_value" text NULL, "record_class" varchar(50) NOT NULL, "description" text NOT NULL, "created_at" timestamp with time zone NOT NULL, "owner_id" integer NOT NULL); (params None)
[ DEBUG ][ 2021-10-31 08:12:32,274 ][ utils ] ==> (0.024) CREATE TABLE "sentry_action" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(100) NOT NULL, "reference" uuid NOT NULL, "status" boolean NOT NULL, "action_type" varchar(100) NOT NULL, "target" varchar(20) NOT NULL, "current_value" text NULL, "new_value" text NULL, "record_class" varchar(50) NOT NULL, "description" text NOT NULL, "created_at" timestamp with time zone NOT NULL, "owner_id" integer NOT NULL); args=None
[ DEBUG ][ 2021-10-31 08:12:32,275 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,276 ][ utils ] ==> (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sentry', '0001_initial', '2021-10-31T08:12:32.275994+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sentry', '0001_initial', datetime.datetime(2021, 10, 31, 8, 12, 32, 275994, tzinfo=<UTC>))
[ DEBUG ][ 2021-10-31 08:12:32,276 ][ schema ] ==> ALTER TABLE "sentry_action" ADD CONSTRAINT "sentry_action_owner_id_137b8f19_fk_auth_user_id" FOREIGN KEY ("owner_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,284 ][ utils ] ==> (0.008) ALTER TABLE "sentry_action" ADD CONSTRAINT "sentry_action_owner_id_137b8f19_fk_auth_user_id" FOREIGN KEY ("owner_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
[ DEBUG ][ 2021-10-31 08:12:32,285 ][ schema ] ==> CREATE INDEX "sentry_action_name_352698e6" ON "sentry_action" ("name"); (params ())
[ DEBUG ][ 2021-10-31 08:12:32,286 ][ utils ] ==> (0.001) CREATE INDEX "sentry_action_name_352698e6" ON "sentry_action" ("name"); args=()
[ DEBUG ][ 2021-10-31 08:12:32,286 ][ schema ] ==> CREATE INDEX "sentry_action_name_352698e6_like" ON "sentry_action" ("name" varchar_pattern_ops); (params ())
[ DEBUG ][ 2021-10-31 08:12:32,287 ][ utils ] ==> (0.001) CREATE INDEX "sentry_action_name_352698e6_like" ON "sentry_action" ("name" varchar_pattern_ops); args=()
[ DEBUG ][ 2021-10-31 08:12:32,288 ][ schema ] ==> CREATE INDEX "sentry_action_reference_7e1b1ece" ON "sentry_action" ("reference"); (params ())
[ DEBUG ][ 2021-10-31 08:12:32,289 ][ utils ] ==> (0.001) CREATE INDEX "sentry_action_reference_7e1b1ece" ON "sentry_action" ("reference"); args=()
[ DEBUG ][ 2021-10-31 08:12:32,289 ][ schema ] ==> CREATE INDEX "sentry_action_owner_id_137b8f19" ON "sentry_action" ("owner_id"); (params ())
[ DEBUG ][ 2021-10-31 08:12:32,290 ][ utils ] ==> (0.001) CREATE INDEX "sentry_action_owner_id_137b8f19" ON "sentry_action" ("owner_id"); args=()
[ DEBUG ][ 2021-10-31 08:12:32,314 ][ schema ] ==> CREATE TABLE "sentry_authorizedips" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(200) NOT NULL, "source" varchar(150) NOT NULL, "description" text NOT NULL, "status" boolean NOT NULL, "created_at" timestamp with time zone NOT NULL); (params None)
[ DEBUG ][ 2021-10-31 08:12:32,320 ][ utils ] ==> (0.006) CREATE TABLE "sentry_authorizedips" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(200) NOT NULL, "source" varchar(150) NOT NULL, "description" text NOT NULL, "status" boolean NOT NULL, "created_at" timestamp with time zone NOT NULL); args=None
[ DEBUG ][ 2021-10-31 08:12:32,323 ][ schema ] ==> CREATE TABLE "sentry_cronjob" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(200) NULL, "reference" uuid NOT NULL, "created_at" date NOT NULL, "start" timestamp with time zone NULL, "end" timestamp with time zone NULL, "cron_type" varchar(200) NULL, "description" text NULL); (params None)
[ DEBUG ][ 2021-10-31 08:12:32,328 ][ utils ] ==> (0.005) CREATE TABLE "sentry_cronjob" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(200) NULL, "reference" uuid NOT NULL, "created_at" date NOT NULL, "start" timestamp with time zone NULL, "end" timestamp with time zone NULL, "cron_type" varchar(200) NULL, "description" text NULL); args=None
[ DEBUG ][ 2021-10-31 08:12:32,330 ][ schema ] ==> CREATE TABLE "sentry_emergencymessage" ("id" serial NOT NULL PRIMARY KEY, "reference" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "code" varchar(20) NULL, "motive" text NOT NULL, "message" text NOT NULL, "raw_data" text NOT NULL, "title" text NOT NULL, "receiver" varchar(200) NULL); (params None)
[ DEBUG ][ 2021-10-31 08:12:32,335 ][ utils ] ==> (0.005) CREATE TABLE "sentry_emergencymessage" ("id" serial NOT NULL PRIMARY KEY, "reference" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "code" varchar(20) NULL, "motive" text NOT NULL, "message" text NOT NULL, "raw_data" text NOT NULL, "title" text NOT NULL, "receiver" varchar(200) NULL); args=None
[ DEBUG ][ 2021-10-31 08:12:32,368 ][ utils ] ==> (0.008) 
            SELECT
                c.conname,
                array(
                    SELECT attname
                    FROM unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
                    JOIN pg_attribute AS ca ON cols.colid = ca.attnum
                    WHERE ca.attrelid = c.conrelid
                    ORDER BY cols.arridx
                ),
                c.contype,
                (SELECT fkc.relname || '.' || fka.attname
                FROM pg_attribute AS fka
                JOIN pg_class AS fkc ON fka.attrelid = fkc.oid
                WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey[1]),
                cl.reloptions
            FROM pg_constraint AS c
            JOIN pg_class AS cl ON c.conrelid = cl.oid
            WHERE cl.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(cl.oid)
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,384 ][ utils ] ==> (0.014) 
            SELECT
                indexname, array_agg(attname ORDER BY arridx), indisunique, indisprimary,
                array_agg(ordering ORDER BY arridx), amname, exprdef, s2.attoptions
            FROM (
                SELECT
                    c2.relname as indexname, idx.*, attr.attname, am.amname,
                    CASE
                        WHEN idx.indexprs IS NOT NULL THEN
                            pg_get_indexdef(idx.indexrelid)
                    END AS exprdef,
                    CASE am.amname
                        WHEN 'btree' THEN
                            CASE (option & 1)
                                WHEN 1 THEN 'DESC' ELSE 'ASC'
                            END
                    END as ordering,
                    c2.reloptions as attoptions
                FROM (
                    SELECT *
                    FROM pg_index i, unnest(i.indkey, i.indoption) WITH ORDINALITY koi(key, option, arridx)
                ) idx
                LEFT JOIN pg_class c ON idx.indrelid = c.oid
                LEFT JOIN pg_class c2 ON idx.indexrelid = c2.oid
                LEFT JOIN pg_am am ON c2.relam = am.oid
                LEFT JOIN pg_attribute attr ON attr.attrelid = c.oid AND attr.attnum = idx.key
                WHERE c.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(c.oid)
            ) s2
            GROUP BY indexname, indisunique, indisprimary, amname, exprdef, attoptions;
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,415 ][ schema ] ==> DROP INDEX IF EXISTS "sentry_action_name_352698e6"; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,420 ][ utils ] ==> (0.004) DROP INDEX IF EXISTS "sentry_action_name_352698e6"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,420 ][ schema ] ==> DROP INDEX IF EXISTS "sentry_action_name_352698e6_like"; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,420 ][ utils ] ==> (0.000) DROP INDEX IF EXISTS "sentry_action_name_352698e6_like"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,427 ][ utils ] ==> (0.001) 
            SELECT
                c.conname,
                array(
                    SELECT attname
                    FROM unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
                    JOIN pg_attribute AS ca ON cols.colid = ca.attnum
                    WHERE ca.attrelid = c.conrelid
                    ORDER BY cols.arridx
                ),
                c.contype,
                (SELECT fkc.relname || '.' || fka.attname
                FROM pg_attribute AS fka
                JOIN pg_class AS fkc ON fka.attrelid = fkc.oid
                WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey[1]),
                cl.reloptions
            FROM pg_constraint AS c
            JOIN pg_class AS cl ON c.conrelid = cl.oid
            WHERE cl.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(cl.oid)
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,450 ][ utils ] ==> (0.004) 
            SELECT
                indexname, array_agg(attname ORDER BY arridx), indisunique, indisprimary,
                array_agg(ordering ORDER BY arridx), amname, exprdef, s2.attoptions
            FROM (
                SELECT
                    c2.relname as indexname, idx.*, attr.attname, am.amname,
                    CASE
                        WHEN idx.indexprs IS NOT NULL THEN
                            pg_get_indexdef(idx.indexrelid)
                    END AS exprdef,
                    CASE am.amname
                        WHEN 'btree' THEN
                            CASE (option & 1)
                                WHEN 1 THEN 'DESC' ELSE 'ASC'
                            END
                    END as ordering,
                    c2.reloptions as attoptions
                FROM (
                    SELECT *
                    FROM pg_index i, unnest(i.indkey, i.indoption) WITH ORDINALITY koi(key, option, arridx)
                ) idx
                LEFT JOIN pg_class c ON idx.indrelid = c.oid
                LEFT JOIN pg_class c2 ON idx.indexrelid = c2.oid
                LEFT JOIN pg_am am ON c2.relam = am.oid
                LEFT JOIN pg_attribute attr ON attr.attrelid = c.oid AND attr.attnum = idx.key
                WHERE c.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(c.oid)
            ) s2
            GROUP BY indexname, indisunique, indisprimary, amname, exprdef, attoptions;
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,450 ][ schema ] ==> SET CONSTRAINTS "sentry_action_owner_id_137b8f19_fk_auth_user_id" IMMEDIATE; ALTER TABLE "sentry_action" DROP CONSTRAINT "sentry_action_owner_id_137b8f19_fk_auth_user_id"; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,452 ][ utils ] ==> (0.001) SET CONSTRAINTS "sentry_action_owner_id_137b8f19_fk_auth_user_id" IMMEDIATE; ALTER TABLE "sentry_action" DROP CONSTRAINT "sentry_action_owner_id_137b8f19_fk_auth_user_id"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,453 ][ utils ] ==> (0.001) 
            SELECT
                c.conname,
                array(
                    SELECT attname
                    FROM unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
                    JOIN pg_attribute AS ca ON cols.colid = ca.attnum
                    WHERE ca.attrelid = c.conrelid
                    ORDER BY cols.arridx
                ),
                c.contype,
                (SELECT fkc.relname || '.' || fka.attname
                FROM pg_attribute AS fka
                JOIN pg_class AS fkc ON fka.attrelid = fkc.oid
                WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey[1]),
                cl.reloptions
            FROM pg_constraint AS c
            JOIN pg_class AS cl ON c.conrelid = cl.oid
            WHERE cl.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(cl.oid)
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,455 ][ utils ] ==> (0.002) 
            SELECT
                indexname, array_agg(attname ORDER BY arridx), indisunique, indisprimary,
                array_agg(ordering ORDER BY arridx), amname, exprdef, s2.attoptions
            FROM (
                SELECT
                    c2.relname as indexname, idx.*, attr.attname, am.amname,
                    CASE
                        WHEN idx.indexprs IS NOT NULL THEN
                            pg_get_indexdef(idx.indexrelid)
                    END AS exprdef,
                    CASE am.amname
                        WHEN 'btree' THEN
                            CASE (option & 1)
                                WHEN 1 THEN 'DESC' ELSE 'ASC'
                            END
                    END as ordering,
                    c2.reloptions as attoptions
                FROM (
                    SELECT *
                    FROM pg_index i, unnest(i.indkey, i.indoption) WITH ORDINALITY koi(key, option, arridx)
                ) idx
                LEFT JOIN pg_class c ON idx.indrelid = c.oid
                LEFT JOIN pg_class c2 ON idx.indexrelid = c2.oid
                LEFT JOIN pg_am am ON c2.relam = am.oid
                LEFT JOIN pg_attribute attr ON attr.attrelid = c.oid AND attr.attnum = idx.key
                WHERE c.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(c.oid)
            ) s2
            GROUP BY indexname, indisunique, indisprimary, amname, exprdef, attoptions;
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,475 ][ schema ] ==> DROP INDEX IF EXISTS "sentry_action_owner_id_137b8f19"; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,476 ][ utils ] ==> (0.001) DROP INDEX IF EXISTS "sentry_action_owner_id_137b8f19"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,477 ][ schema ] ==> ALTER TABLE "sentry_action" RENAME COLUMN "owner_id" TO "owner"; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,477 ][ utils ] ==> (0.000) ALTER TABLE "sentry_action" RENAME COLUMN "owner_id" TO "owner"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,477 ][ schema ] ==> ALTER TABLE "sentry_action" ALTER COLUMN "owner" TYPE text USING "owner"::text, ALTER COLUMN "owner" DROP NOT NULL; (params [])
[ DEBUG ][ 2021-10-31 08:12:32,484 ][ utils ] ==> (0.006) ALTER TABLE "sentry_action" ALTER COLUMN "owner" TYPE text USING "owner"::text, ALTER COLUMN "owner" DROP NOT NULL; args=[]
[ DEBUG ][ 2021-10-31 08:12:32,486 ][ schema ] ==> ALTER TABLE "sentry_action" ALTER COLUMN "record_class" TYPE varchar(150); (params [])
[ DEBUG ][ 2021-10-31 08:12:32,487 ][ utils ] ==> (0.000) ALTER TABLE "sentry_action" ALTER COLUMN "record_class" TYPE varchar(150); args=[]
[ DEBUG ][ 2021-10-31 08:12:32,490 ][ utils ] ==> (0.001) 
            SELECT
                c.conname,
                array(
                    SELECT attname
                    FROM unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
                    JOIN pg_attribute AS ca ON cols.colid = ca.attnum
                    WHERE ca.attrelid = c.conrelid
                    ORDER BY cols.arridx
                ),
                c.contype,
                (SELECT fkc.relname || '.' || fka.attname
                FROM pg_attribute AS fka
                JOIN pg_class AS fkc ON fka.attrelid = fkc.oid
                WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey[1]),
                cl.reloptions
            FROM pg_constraint AS c
            JOIN pg_class AS cl ON c.conrelid = cl.oid
            WHERE cl.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(cl.oid)
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,493 ][ utils ] ==> (0.003) 
            SELECT
                indexname, array_agg(attname ORDER BY arridx), indisunique, indisprimary,
                array_agg(ordering ORDER BY arridx), amname, exprdef, s2.attoptions
            FROM (
                SELECT
                    c2.relname as indexname, idx.*, attr.attname, am.amname,
                    CASE
                        WHEN idx.indexprs IS NOT NULL THEN
                            pg_get_indexdef(idx.indexrelid)
                    END AS exprdef,
                    CASE am.amname
                        WHEN 'btree' THEN
                            CASE (option & 1)
                                WHEN 1 THEN 'DESC' ELSE 'ASC'
                            END
                    END as ordering,
                    c2.reloptions as attoptions
                FROM (
                    SELECT *
                    FROM pg_index i, unnest(i.indkey, i.indoption) WITH ORDINALITY koi(key, option, arridx)
                ) idx
                LEFT JOIN pg_class c ON idx.indrelid = c.oid
                LEFT JOIN pg_class c2 ON idx.indexrelid = c2.oid
                LEFT JOIN pg_am am ON c2.relam = am.oid
                LEFT JOIN pg_attribute attr ON attr.attrelid = c.oid AND attr.attnum = idx.key
                WHERE c.relname = 'sentry_action' AND pg_catalog.pg_table_is_visible(c.oid)
            ) s2
            GROUP BY indexname, indisunique, indisprimary, amname, exprdef, attoptions;
        ; args=['sentry_action']
[ DEBUG ][ 2021-10-31 08:12:32,493 ][ schema ] ==> DROP INDEX IF EXISTS "sentry_action_reference_7e1b1ece"; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,494 ][ utils ] ==> (0.000) DROP INDEX IF EXISTS "sentry_action_reference_7e1b1ece"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,496 ][ schema ] ==> ALTER TABLE "sentry_action" ALTER COLUMN "target" TYPE varchar(200); (params [])
[ DEBUG ][ 2021-10-31 08:12:32,497 ][ utils ] ==> (0.000) ALTER TABLE "sentry_action" ALTER COLUMN "target" TYPE varchar(200); args=[]
[ DEBUG ][ 2021-10-31 08:12:32,500 ][ schema ] ==> CREATE TABLE "sentry_cronjobmessage" ("id" serial NOT NULL PRIMARY KEY, "reference" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "message" text NOT NULL, "message_type" varchar(20) NOT NULL, "cron_job_id" integer NULL); (params None)
[ DEBUG ][ 2021-10-31 08:12:32,506 ][ utils ] ==> (0.005) CREATE TABLE "sentry_cronjobmessage" ("id" serial NOT NULL PRIMARY KEY, "reference" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "message" text NOT NULL, "message_type" varchar(20) NOT NULL, "cron_job_id" integer NULL); args=None
[ DEBUG ][ 2021-10-31 08:12:32,507 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,508 ][ utils ] ==> (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sentry', '0002_auto_20211031_0812', '2021-10-31T08:12:32.508194+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sentry', '0002_auto_20211031_0812', datetime.datetime(2021, 10, 31, 8, 12, 32, 508194, tzinfo=<UTC>))
[ DEBUG ][ 2021-10-31 08:12:32,509 ][ schema ] ==> CREATE INDEX "sentry_cronjob_reference_d91e6d3f" ON "sentry_cronjob" ("reference"); (params ())
[ DEBUG ][ 2021-10-31 08:12:32,510 ][ utils ] ==> (0.001) CREATE INDEX "sentry_cronjob_reference_d91e6d3f" ON "sentry_cronjob" ("reference"); args=()
[ DEBUG ][ 2021-10-31 08:12:32,510 ][ schema ] ==> ALTER TABLE "sentry_cronjobmessage" ADD CONSTRAINT "sentry_cronjobmessage_cron_job_id_fdcdc70d_fk_sentry_cronjob_id" FOREIGN KEY ("cron_job_id") REFERENCES "sentry_cronjob" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
[ DEBUG ][ 2021-10-31 08:12:32,512 ][ utils ] ==> (0.002) ALTER TABLE "sentry_cronjobmessage" ADD CONSTRAINT "sentry_cronjobmessage_cron_job_id_fdcdc70d_fk_sentry_cronjob_id" FOREIGN KEY ("cron_job_id") REFERENCES "sentry_cronjob" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
[ DEBUG ][ 2021-10-31 08:12:32,548 ][ schema ] ==> CREATE INDEX "sentry_cronjobmessage_reference_0727d8a5" ON "sentry_cronjobmessage" ("reference"); (params ())
[ DEBUG ][ 2021-10-31 08:12:32,611 ][ utils ] ==> (0.061) CREATE INDEX "sentry_cronjobmessage_reference_0727d8a5" ON "sentry_cronjobmessage" ("reference"); args=()
[ DEBUG ][ 2021-10-31 08:12:32,611 ][ schema ] ==> CREATE INDEX "sentry_cronjobmessage_cron_job_id_fdcdc70d" ON "sentry_cronjobmessage" ("cron_job_id"); (params ())
[ DEBUG ][ 2021-10-31 08:12:32,613 ][ utils ] ==> (0.002) CREATE INDEX "sentry_cronjobmessage_cron_job_id_fdcdc70d" ON "sentry_cronjobmessage" ("cron_job_id"); args=()
[ DEBUG ][ 2021-10-31 08:12:32,619 ][ utils ] ==> (0.002) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:12:32,645 ][ utils ] ==> (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:12:32,667 ][ utils ] ==> (0.003) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',)
[ DEBUG ][ 2021-10-31 08:12:32,668 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry')
[ DEBUG ][ 2021-10-31 08:12:32,672 ][ utils ] ==> (0.003) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,)
[ DEBUG ][ 2021-10-31 08:12:32,673 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',)
[ DEBUG ][ 2021-10-31 08:12:32,674 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',)
[ DEBUG ][ 2021-10-31 08:12:32,675 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission')
[ DEBUG ][ 2021-10-31 08:12:32,676 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group')
[ DEBUG ][ 2021-10-31 08:12:32,677 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user')
[ DEBUG ][ 2021-10-31 08:12:32,679 ][ utils ] ==> (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4)
[ DEBUG ][ 2021-10-31 08:12:32,680 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',)
[ DEBUG ][ 2021-10-31 08:12:32,681 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',)
[ DEBUG ][ 2021-10-31 08:12:32,682 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype')
[ DEBUG ][ 2021-10-31 08:12:32,684 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
[ DEBUG ][ 2021-10-31 08:12:32,685 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',)
[ DEBUG ][ 2021-10-31 08:12:32,685 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',)
[ DEBUG ][ 2021-10-31 08:12:32,686 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session')
[ DEBUG ][ 2021-10-31 08:12:32,688 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
[ DEBUG ][ 2021-10-31 08:12:32,689 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',)
[ DEBUG ][ 2021-10-31 08:12:32,690 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'authtoken'; args=('authtoken',)
[ DEBUG ][ 2021-10-31 08:12:32,690 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'authtoken' AND "django_content_type"."model" = 'token') LIMIT 21; args=('authtoken', 'token')
[ DEBUG ][ 2021-10-31 08:12:32,692 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
[ DEBUG ][ 2021-10-31 08:12:32,693 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'authtoken'; args=('authtoken',)
[ DEBUG ][ 2021-10-31 08:12:32,693 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_filters'; args=('django_filters',)
[ DEBUG ][ 2021-10-31 08:12:32,695 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_filters'; args=('django_filters',)
[ DEBUG ][ 2021-10-31 08:12:32,695 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'oauth'; args=('oauth',)
[ DEBUG ][ 2021-10-31 08:12:32,696 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'branch') LIMIT 21; args=('oauth', 'branch')
[ DEBUG ][ 2021-10-31 08:12:32,697 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'city') LIMIT 21; args=('oauth', 'city')
[ DEBUG ][ 2021-10-31 08:12:32,698 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'paramcountbranches') LIMIT 21; args=('oauth', 'paramcountbranches')
[ DEBUG ][ 2021-10-31 08:12:32,699 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'profile') LIMIT 21; args=('oauth', 'profile')
[ DEBUG ][ 2021-10-31 08:12:32,700 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'signature') LIMIT 21; args=('oauth', 'signature')
[ DEBUG ][ 2021-10-31 08:12:32,701 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'town') LIMIT 21; args=('oauth', 'town')
[ DEBUG ][ 2021-10-31 08:12:32,703 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'userboardpermission') LIMIT 21; args=('oauth', 'userboardpermission')
[ DEBUG ][ 2021-10-31 08:12:32,704 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'userlang') LIMIT 21; args=('oauth', 'userlang')
[ DEBUG ][ 2021-10-31 08:12:32,705 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'userrecover') LIMIT 21; args=('oauth', 'userrecover')
[ DEBUG ][ 2021-10-31 08:12:32,707 ][ utils ] ==> (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (20, 21, 22, 23, 24, 25, 26, 27, 28) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(20, 21, 22, 23, 24, 25, 26, 27, 28)
[ DEBUG ][ 2021-10-31 08:12:32,707 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'oauth'; args=('oauth',)
[ DEBUG ][ 2021-10-31 08:12:32,708 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'request'; args=('request',)
[ DEBUG ][ 2021-10-31 08:12:32,709 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'request' AND "django_content_type"."model" = 'request') LIMIT 21; args=('request', 'request')
[ DEBUG ][ 2021-10-31 08:12:32,710 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (29) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(29,)
[ DEBUG ][ 2021-10-31 08:12:32,711 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'request'; args=('request',)
[ DEBUG ][ 2021-10-31 08:12:32,712 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sentry'; args=('sentry',)
[ DEBUG ][ 2021-10-31 08:12:32,714 ][ utils ] ==> (0.002) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sentry', 'action'), ('sentry', 'authorizedips'), ('sentry', 'cronjob'), ('sentry', 'emergencymessage'), ('sentry', 'cronjobmessage') RETURNING "django_content_type"."id"; args=('sentry', 'action', 'sentry', 'authorizedips', 'sentry', 'cronjob', 'sentry', 'emergencymessage', 'sentry', 'cronjobmessage')
[ DEBUG ][ 2021-10-31 08:12:32,715 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'action') LIMIT 21; args=('sentry', 'action')
[ DEBUG ][ 2021-10-31 08:12:32,716 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'authorizedips') LIMIT 21; args=('sentry', 'authorizedips')
[ DEBUG ][ 2021-10-31 08:12:32,717 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'cronjob') LIMIT 21; args=('sentry', 'cronjob')
[ DEBUG ][ 2021-10-31 08:12:32,718 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'emergencymessage') LIMIT 21; args=('sentry', 'emergencymessage')
[ DEBUG ][ 2021-10-31 08:12:32,719 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'cronjobmessage') LIMIT 21; args=('sentry', 'cronjobmessage')
[ DEBUG ][ 2021-10-31 08:12:32,721 ][ utils ] ==> (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (37, 38, 39, 40, 41) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(37, 38, 39, 40, 41)
[ DEBUG ][ 2021-10-31 08:12:32,725 ][ utils ] ==> (0.003) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add action', 37, 'add_action'), ('Can change action', 37, 'change_action'), ('Can delete action', 37, 'delete_action'), ('Can view action', 37, 'view_action'), ('Can add IPs Autorisées', 38, 'add_authorizedips'), ('Can change IPs Autorisées', 38, 'change_authorizedips'), ('Can delete IPs Autorisées', 38, 'delete_authorizedips'), ('Can view IPs Autorisées', 38, 'view_authorizedips'), ('Can add Cron', 39, 'add_cronjob'), ('Can change Cron', 39, 'change_cronjob'), ('Can delete Cron', 39, 'delete_cronjob'), ('Can view Cron', 39, 'view_cronjob'), ('Can add Message Urgence', 40, 'add_emergencymessage'), ('Can change Message Urgence', 40, 'change_emergencymessage'), ('Can delete Message Urgence', 40, 'delete_emergencymessage'), ('Can view Message Urgence', 40, 'view_emergencymessage'), ('Can add Message Cron', 41, 'add_cronjobmessage'), ('Can change Message Cron', 41, 'change_cronjobmessage'), ('Can delete Message Cron', 41, 'delete_cronjobmessage'), ('Can view Message Cron', 41, 'view_cronjobmessage') RETURNING "auth_permission"."id"; args=('Can add action', 37, 'add_action', 'Can change action', 37, 'change_action', 'Can delete action', 37, 'delete_action', 'Can view action', 37, 'view_action', 'Can add IPs Autorisées', 38, 'add_authorizedips', 'Can change IPs Autorisées', 38, 'change_authorizedips', 'Can delete IPs Autorisées', 38, 'delete_authorizedips', 'Can view IPs Autorisées', 38, 'view_authorizedips', 'Can add Cron', 39, 'add_cronjob', 'Can change Cron', 39, 'change_cronjob', 'Can delete Cron', 39, 'delete_cronjob', 'Can view Cron', 39, 'view_cronjob', 'Can add Message Urgence', 40, 'add_emergencymessage', 'Can change Message Urgence', 40, 'change_emergencymessage', 'Can delete Message Urgence', 40, 'delete_emergencymessage', 'Can view Message Urgence', 40, 'view_emergencymessage', 'Can add Message Cron', 41, 'add_cronjobmessage', 'Can change Message Cron', 41, 'change_cronjobmessage', 'Can delete Message Cron', 41, 'delete_cronjobmessage', 'Can view Message Cron', 41, 'view_cronjobmessage')
[ DEBUG ][ 2021-10-31 08:12:32,727 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sentry'; args=('sentry',)
[ DEBUG ][ 2021-10-31 08:12:32,728 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_extensions'; args=('django_extensions',)
[ DEBUG ][ 2021-10-31 08:12:32,729 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_extensions'; args=('django_extensions',)
[ DEBUG ][ 2021-10-31 08:38:34,065 ][ utils ] ==> (0.005) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:38:34,067 ][ utils ] ==> (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:38:35,067 ][ utils ] ==> (0.004) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:38:35,069 ][ utils ] ==> (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:38:35,072 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:38:35,073 ][ utils ] ==> (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:38:35,130 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:38:35,131 ][ utils ] ==> (0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
[ DEBUG ][ 2021-10-31 08:38:35,132 ][ utils ] ==> (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=()
[ DEBUG ][ 2021-10-31 08:38:35,134 ][ utils ] ==> (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',)
[ DEBUG ][ 2021-10-31 08:38:35,135 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry')
[ DEBUG ][ 2021-10-31 08:38:35,137 ][ utils ] ==> (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,)
[ DEBUG ][ 2021-10-31 08:38:35,138 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',)
[ DEBUG ][ 2021-10-31 08:38:35,139 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',)
[ DEBUG ][ 2021-10-31 08:38:35,140 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission')
[ DEBUG ][ 2021-10-31 08:38:35,141 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group')
[ DEBUG ][ 2021-10-31 08:38:35,141 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user')
[ DEBUG ][ 2021-10-31 08:38:35,143 ][ utils ] ==> (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4)
[ DEBUG ][ 2021-10-31 08:38:35,144 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',)
[ DEBUG ][ 2021-10-31 08:38:35,145 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',)
[ DEBUG ][ 2021-10-31 08:38:35,146 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype')
[ DEBUG ][ 2021-10-31 08:38:35,147 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
[ DEBUG ][ 2021-10-31 08:38:35,148 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',)
[ DEBUG ][ 2021-10-31 08:38:35,149 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',)
[ DEBUG ][ 2021-10-31 08:38:35,150 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session')
[ DEBUG ][ 2021-10-31 08:38:35,151 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
[ DEBUG ][ 2021-10-31 08:38:35,152 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',)
[ DEBUG ][ 2021-10-31 08:38:35,153 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'authtoken'; args=('authtoken',)
[ DEBUG ][ 2021-10-31 08:38:35,153 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'authtoken' AND "django_content_type"."model" = 'token') LIMIT 21; args=('authtoken', 'token')
[ DEBUG ][ 2021-10-31 08:38:35,155 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
[ DEBUG ][ 2021-10-31 08:38:35,156 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'authtoken'; args=('authtoken',)
[ DEBUG ][ 2021-10-31 08:38:35,156 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_filters'; args=('django_filters',)
[ DEBUG ][ 2021-10-31 08:38:35,158 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_filters'; args=('django_filters',)
[ DEBUG ][ 2021-10-31 08:38:35,158 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'oauth'; args=('oauth',)
[ DEBUG ][ 2021-10-31 08:38:35,159 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'branch') LIMIT 21; args=('oauth', 'branch')
[ DEBUG ][ 2021-10-31 08:38:35,160 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'city') LIMIT 21; args=('oauth', 'city')
[ DEBUG ][ 2021-10-31 08:38:35,161 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'paramcountbranches') LIMIT 21; args=('oauth', 'paramcountbranches')
[ DEBUG ][ 2021-10-31 08:38:35,162 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'profile') LIMIT 21; args=('oauth', 'profile')
[ DEBUG ][ 2021-10-31 08:38:35,163 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'signature') LIMIT 21; args=('oauth', 'signature')
[ DEBUG ][ 2021-10-31 08:38:35,163 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'town') LIMIT 21; args=('oauth', 'town')
[ DEBUG ][ 2021-10-31 08:38:35,164 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'userboardpermission') LIMIT 21; args=('oauth', 'userboardpermission')
[ DEBUG ][ 2021-10-31 08:38:35,165 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'userlang') LIMIT 21; args=('oauth', 'userlang')
[ DEBUG ][ 2021-10-31 08:38:35,166 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'oauth' AND "django_content_type"."model" = 'userrecover') LIMIT 21; args=('oauth', 'userrecover')
[ DEBUG ][ 2021-10-31 08:38:35,168 ][ utils ] ==> (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (20, 21, 22, 23, 24, 25, 26, 27, 28) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(20, 21, 22, 23, 24, 25, 26, 27, 28)
[ DEBUG ][ 2021-10-31 08:38:35,168 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'oauth'; args=('oauth',)
[ DEBUG ][ 2021-10-31 08:38:35,169 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'request'; args=('request',)
[ DEBUG ][ 2021-10-31 08:38:35,170 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'request' AND "django_content_type"."model" = 'request') LIMIT 21; args=('request', 'request')
[ DEBUG ][ 2021-10-31 08:38:35,171 ][ utils ] ==> (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (29) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(29,)
[ DEBUG ][ 2021-10-31 08:38:35,172 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'request'; args=('request',)
[ DEBUG ][ 2021-10-31 08:38:35,172 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sentry'; args=('sentry',)
[ DEBUG ][ 2021-10-31 08:38:35,173 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'action') LIMIT 21; args=('sentry', 'action')
[ DEBUG ][ 2021-10-31 08:38:35,174 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'authorizedips') LIMIT 21; args=('sentry', 'authorizedips')
[ DEBUG ][ 2021-10-31 08:38:35,175 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'cronjob') LIMIT 21; args=('sentry', 'cronjob')
[ DEBUG ][ 2021-10-31 08:38:35,176 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'emergencymessage') LIMIT 21; args=('sentry', 'emergencymessage')
[ DEBUG ][ 2021-10-31 08:38:35,177 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sentry' AND "django_content_type"."model" = 'cronjobmessage') LIMIT 21; args=('sentry', 'cronjobmessage')
[ DEBUG ][ 2021-10-31 08:38:35,178 ][ utils ] ==> (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (37, 38, 39, 40, 41) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(37, 38, 39, 40, 41)
[ DEBUG ][ 2021-10-31 08:38:35,179 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sentry'; args=('sentry',)
[ DEBUG ][ 2021-10-31 08:38:35,180 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_extensions'; args=('django_extensions',)
[ DEBUG ][ 2021-10-31 08:38:35,181 ][ utils ] ==> (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_extensions'; args=('django_extensions',)
